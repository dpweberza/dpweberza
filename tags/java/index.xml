<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on David Weber</title>
    <link>http://www.davidpaulweber.com/tags/java/</link>
    <description>Recent content in Java on David Weber</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>dpweberza@gmail.com (David Weber)</managingEditor>
    <webMaster>dpweberza@gmail.com (David Weber)</webMaster>
    <lastBuildDate>Thu, 07 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.davidpaulweber.com/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Coding Challenge: Coin Dispense System</title>
      <link>http://www.davidpaulweber.com/post/2017-09-07-coin-dispense-coding-challenge/</link>
      <pubDate>Thu, 07 Sep 2017 00:00:00 +0000</pubDate>
      <author>dpweberza@gmail.com (David Weber)</author>
      <guid>http://www.davidpaulweber.com/post/2017-09-07-coin-dispense-coding-challenge/</guid>
      <description>Preamble I have started cleaning up and updating my Github account https://github.com/dpweberza as more and more companies these days are likely to view it. Because I don&amp;rsquo;t have many open-source projects, I have uploaded a rather meaty coding challenge that I completed back in 2015.
The Coding Challenge In 2015 I interviewed at a global mobile payments company for the position of Android Developer. At the time I had no commericial Android development experience but nevertheless was invited to complete a coding challenge after I had passed a screening call.</description>
    </item>
    
    <item>
      <title>Design Patterns: Chain of Responsibility - A case study</title>
      <link>http://www.davidpaulweber.com/post/2017-09-06-chain-of-responsibility/</link>
      <pubDate>Wed, 06 Sep 2017 00:00:00 +0000</pubDate>
      <author>dpweberza@gmail.com (David Weber)</author>
      <guid>http://www.davidpaulweber.com/post/2017-09-06-chain-of-responsibility/</guid>
      <description>Preamble In an effort to contribute more to my blog and help jog my memory, I have decided to start a series of blogs detailing some popular design patterns and how I have used them.
Chain of Responsiblilty The Chain of Responsibility pattern is defined as follows: &amp;ldquo;Gives more than one object an opportunity to handle a request by linking receiving objects together&amp;rdquo; - Gang of Four book on Design Patterns</description>
    </item>
    
    <item>
      <title>Hibernate Batch Inserts</title>
      <link>http://www.davidpaulweber.com/post/2017-04-13-hibernate-batch-inserts/</link>
      <pubDate>Thu, 13 Apr 2017 20:10:59 +0000</pubDate>
      <author>dpweberza@gmail.com (David Weber)</author>
      <guid>http://www.davidpaulweber.com/post/2017-04-13-hibernate-batch-inserts/</guid>
      <description>The other day I was building our new orders interface in VueJS and I came across a performance problem on large orders where we were creating a large number of Hibernate objects in one request. For 750 objects the request was taking around 2 minutes. This was certainly unacceptable as the whole reason I was building a new orders interface was to scale better and provide a better UX.
So I started looking at options to do a batch insert instead, unfortunately we are stuck on Hibernate 2 at the moment due to a rather large code base that cannot be easily upgraded.</description>
    </item>
    
  </channel>
</rss>